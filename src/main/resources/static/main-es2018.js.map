{"version":3,"sources":["./src/app/components/task/task-edit.component.ts","./src/app/components/task/task-edit.component.html","./src/app/components/task/task-create.component.ts","./src/app/components/task/task-create.component.html","./src/app/components/task/task-list.component.ts","./src/app/components/task/task-list.component.html","./src/app/components/app/app.component.ts","./src/app/components/app/app.component.html","./src/app/app.module.ts","./src/app/services/task-api.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2018.js","sourcesContent":["import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { TaskApiService } from \"../../services/task-api.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'edit-task',\r\n    templateUrl: 'task-edit.component.html',\r\n    providers: [TaskApiService]\r\n})\r\nexport class TaskEditComponent implements OnInit {\r\n    taskModel: FormGroup;\r\n\r\n    constructor(private taskApiService: TaskApiService,\r\n                private route: ActivatedRoute,\r\n                private router: Router,\r\n                private fb: FormBuilder) {\r\n        this.taskModel = this.fb.group({\r\n            \"id\": [],\r\n            \"title\": ['', Validators.required],\r\n            \"description\": ['', Validators.required],\r\n            \"version\": ['']\r\n        })\r\n    }\r\n\r\n    updateValue() {\r\n        let task = this.taskModel.value;\r\n        if (this.taskModel.valid) {\r\n            this.taskApiService.updateTask(task).subscribe(updatedValue =>\r\n                this.router.navigate(['list'])\r\n            )\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        let taskId = this.route.snapshot.params[\"id\"];\r\n        this.taskApiService\r\n            .getTask(taskId).subscribe(value =>\r\n            this.taskModel = this.fb.group({\r\n                \"id\": [value.id],\r\n                \"title\": [value.title, [Validators.required, Validators.minLength(2)]],\r\n                \"description\": [value.description, [Validators.required, Validators.minLength(2)]],\r\n                \"version\": [value.version]\r\n            })\r\n        )\r\n    }\r\n}\r\n","<div>\r\n    <div>\r\n        <form [formGroup]=\"taskModel\" (ngSubmit)=\"updateValue()\">\r\n            <input type=\"hidden\" formControlName=\"id\"/>\r\n            <input type=\"hidden\" formControlName=\"version\"/>\r\n            <div class=\"form-group\">\r\n                <label for=\"title\" >Title</label>\r\n                <div>\r\n                    <input id=\"title\" placeholder=\"Title\" formControlName=\"title\"/>\r\n                    <span [hidden]=\"!taskModel.hasError('required', 'value')\">Title is required..</span>\r\n                    <span [hidden]=\"!taskModel.hasError('minlength', 'value')\">At least 2 characters in length</span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label for=\"description\">Description</label>\r\n                <div>\r\n                    <input id=\"description\" placeholder=\"Description\" formControlName=\"description\"/>\r\n                    <span [hidden]=\"!taskModel.hasError('required', 'value')\">Description is required..</span>\r\n                    <span [hidden]=\"!taskModel.hasError('minlength', 'value')\">At least 2 characters in length</span>\r\n                </div>\r\n            </div>\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n            <a [routerLink]=\"['/list']\">Task List</a>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { TaskApiService } from '../../services/task-api.service'\r\nimport { Router } from '@angular/router'\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'create-task',\r\n    templateUrl: 'task-create.component.html',\r\n    providers: [TaskApiService]\r\n})\r\nexport class TaskCreateComponent {\r\n\r\n    taskModel: FormGroup;\r\n\r\n    constructor(private taskApiService: TaskApiService, private router: Router, fb: FormBuilder) {\r\n        this.taskModel = fb.group({\r\n            \"title\": ['', [Validators.required, Validators.minLength(2)]],\r\n            \"description\": ['', [Validators.required, Validators.minLength(2)]]\r\n        })\r\n    }\r\n\r\n    createValue() {\r\n        let task = this.taskModel.value;\r\n        if (this.taskModel.valid) {\r\n            this.taskApiService.createTask(task).subscribe(createdTask => {\r\n                console.debug(\"created task: \" + createdTask);\r\n                this.router.navigate(['list']);\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n","<div>\r\n    <div>\r\n        <form [formGroup]=\"taskModel\" (ngSubmit)=\"createValue()\">\r\n            <div>\r\n                <label for=\"title\">Title</label>\r\n                <div>\r\n                    <input id=\"title\" placeholder=\"Title\" formControlName=\"title\"/>\r\n                    <span [hidden]=\"!taskModel.hasError('required', 'value')\">Title is required..</span>\r\n                    <span [hidden]=\"!taskModel.hasError('minlength', 'value')\">At least 2 characters in length</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <label for=\"description\">Description</label>\r\n                <div>\r\n                    <input id=\"description\" placeholder=\"Description\" formControlName=\"description\"/>\r\n                    <span [hidden]=\"!taskModel.hasError('required', 'value')\">Description is required..</span>\r\n                    <span [hidden]=\"!taskModel.hasError('minlength', 'value')\">At least 2 characters in length</span>\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n            <a [routerLink]=\"['/list']\">Task List</a>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TaskApiService } from '../../services/task-api.service'\r\nimport { Task } from 'app/models/task';\r\nimport { Observable } from \"rxjs\";\r\nimport { Page } from \"../../models/common\";\r\n\r\n@Component({\r\n    selector: 'tasks',\r\n    templateUrl: 'task-list.component.html',\r\n    providers: [TaskApiService]\r\n})\r\nexport class TaskListComponent implements OnInit {\r\n    tasks$: Observable<Page<Task>>;\r\n\r\n    constructor(private taskApiService: TaskApiService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.tasks$ = this.taskApiService.getTasks();\r\n        this.taskApiService.subscribe()\r\n            .subscribe({\r\n                next: (event: MessageEvent) => {\r\n                    console.log(\"Observer : \" + event.data);\r\n                    this.tasks$ = this.taskApiService.getTasks()\r\n                }\r\n            });\r\n    }\r\n}\r\n","<div class=\"border-collapse border border-green-800\">\r\n    <div>\r\n        <table *ngIf=\"tasks$ | async as tasks\" class=\"table-auto\">\r\n            <thead>\r\n            <tr>\r\n                <th>Title</th>\r\n                <th>Description</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr *ngFor=\"let task of tasks.content; let e = even;\">\r\n                <td>{{ task.title }}</td>\r\n                <td>{{ task.description }}</td>\r\n                <td><a [routerLink]=\"['/edit', task.id]\">수정</a></td>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>\r\n\r\n<div>\r\n    <div>\r\n        <a [routerLink]=\"['/create']\">New Value</a>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    providers: []\r\n})\r\nexport class AppComponent {\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TaskListComponent } from \"./components/task/task-list.component\";\r\nimport { AppComponent } from \"./components/app/app.component\"\r\nimport { TaskCreateComponent } from \"./components/task/task-create.component\";\r\nimport { TaskEditComponent } from \"./components/task/task-edit.component\";\r\nimport { HashLocationStrategy, LocationStrategy } from \"@angular/common\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nconst appRoutes: Routes = [\r\n    {path: 'list', component: TaskListComponent},\r\n    {path: 'edit/:id', component: TaskEditComponent},\r\n    {path: 'create', component: TaskCreateComponent},\r\n    {path: '', component: TaskListComponent},\r\n    {path: '*', component: TaskListComponent},\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TaskListComponent,\r\n        TaskCreateComponent,\r\n        TaskEditComponent,\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' })\r\n    ],\r\n    providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Task } from 'app/models/task';\r\nimport { Page } from \"../models/common\";\r\n\r\n\r\n@Injectable()\r\nexport class TaskApiService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    getTasks(): Observable<Page<Task>> {\r\n        return this.http.get<Page<Task>>(\"/api/tasks\");\r\n    }\r\n\r\n    getTask(id: number): Observable<Task> {\r\n        return this.http.get<Task>(`/api/tasks/${id}`);\r\n    }\r\n\r\n    createTask(task: Task): Observable<Task> {\r\n        let bodyString = JSON.stringify(task);\r\n        const httpOptions = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n        console.log(\"Creating Task : \" + bodyString);\r\n        return this.http.post<Task>(\"/api/tasks\", bodyString, httpOptions);\r\n    }\r\n\r\n    updateTask(task: Task): Observable<Task> {\r\n        let bodyString = JSON.stringify(task);\r\n        const httpOptions = {headers: new HttpHeaders({'Content-Type': 'application/json'})};\r\n        console.log(\"Updating Task : \" + bodyString);\r\n        return this.http.put<Task>(\"/api/tasks/\" + task.id, bodyString, httpOptions)\r\n    }\r\n\r\n    subscribe(): Subject<any> {\r\n        let eventSource = new EventSource(\"/api/tasks/subscribe\");\r\n        let subscription = new Subject();\r\n        eventSource.addEventListener(\"message\", event => {\r\n            console.info(\"Got event: \" + event.data);\r\n            subscription.next(event);\r\n        });\r\n        return subscription;\r\n    }\r\n}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}